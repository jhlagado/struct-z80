;-------------------------------------------------------------------------------
;
; Assembler Structured Control-flow Macros
; by John Hardy @ 2019 ALL WRONGS RESERVED
; https://github.com/jhlagado/struct-z80
;
; Inspired by the work of Garth Wilson and Dave Keenan
; http://wilsonminesco.com/StructureMacros/
; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
;
;-------------------------------------------------------------------------------

STRUC_COUNT .set 0

STRUC_12 .set 0
STRUC_11 .set 0
STRUC_10 .set 0
STRUC_9 .set 0
STRUC_8 .set 0
STRUC_7 .set 0
STRUC_6 .set 0
STRUC_5 .set 0
STRUC_4 .set 0
STRUC_3 .set 0
STRUC_2 .set 0
STRUC_TOP .set 0

.macro STRUC_PUSH, arg
    STRUC_COUNT .set STRUC_COUNT + 1

    STRUC_12 .set STRUC_11
    STRUC_11 .set STRUC_10
    STRUC_10 .set STRUC_9
    STRUC_9 .set STRUC_8
    STRUC_8 .set STRUC_7
    STRUC_7 .set STRUC_6
    STRUC_6 .set STRUC_5
    STRUC_5 .set STRUC_4
    STRUC_4 .set STRUC_3
    STRUC_3 .set STRUC_2
    STRUC_2 .set STRUC_TOP
    STRUC_TOP .set arg
.endm

.macro STRUC_POP
    STRUC_COUNT .set STRUC_COUNT - 1

    STRUC_TOP .set STRUC_2
    STRUC_2 .set STRUC_3
    STRUC_3 .set STRUC_4
    STRUC_4 .set STRUC_5
    STRUC_5 .set STRUC_6
    STRUC_6 .set STRUC_7
    STRUC_7 .set STRUC_8
    STRUC_8 .set STRUC_9
    STRUC_9 .set STRUC_10
    STRUC_10 .set STRUC_11
    STRUC_11 .set STRUC_12
    STRUC_12 .set 0
.endm

.macro STRUC_FWD
    CUR_ADR .set $
    org STRUC_TOP - 2
    dw CUR_ADR
    org CUR_ADR
.endm

; if

.macro _if, flag
    jp flag, L_%%M
    jp $              ; placeholder jump to _else or _endif
    STRUC_PUSH $
L_%%M:
.endm

.macro _else
    jp $              ; placeholder jump to _endif
    STRUC_FWD
    STRUC_TOP .set $  ;reuse top of stack
.endm

.macro _endif
    STRUC_FWD
    STRUC_POP
.endm

.macro _andif, flag ; continues _if test with a second test if first test was true
    jp flag, L_%%M
    jp $              ; placeholder jump to _endif
    STRUC_FWD
    STRUC_TOP .set $  ;reuse top of stack
L_%%M:
.endm

; switch

.macro _switch
    jr L_%%M
    jp $            ; placeholder jump to endswitch
    STRUC_PUSH $
L_%%M:
.endm

.macro _case, flag
    jp flag, L_%%M
    jp $            ; placeholder jump to endcase
    STRUC_PUSH $
L_%%M:
.endm

.macro _endcase
    jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
    STRUC_FWD
    STRUC_POP
.endm

.macro _endswitch
    STRUC_FWD
    STRUC_POP
.endm

; skip

.macro _skip
    jp $              ; placeholder jump to _else or _endif
    STRUC_PUSH $
.endm

.macro _endskip
    STRUC_FWD
    STRUC_POP
.endm
